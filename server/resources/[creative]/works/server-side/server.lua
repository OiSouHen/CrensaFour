-----------------------------------------------------------------------------------------------------------------------------------------
-- VRP
-----------------------------------------------------------------------------------------------------------------------------------------
local Tunnel = module("vrp","lib/Tunnel")
local Proxy = module("vrp","lib/Proxy")
vRP = Proxy.getInterface("vRP")
-----------------------------------------------------------------------------------------------------------------------------------------
-- CONNECTION
-----------------------------------------------------------------------------------------------------------------------------------------
cRP = {}
Tunnel.bindInterface("works",cRP)
vCLIENT = Tunnel.getInterface("works")
-----------------------------------------------------------------------------------------------------------------------------------------
-- WORKS
-----------------------------------------------------------------------------------------------------------------------------------------
local works = {
	["Transportador"] = {
		["coords"] = { 354.27,271.06,103.04 },
		["upgradeStress"] = 1,
		["routeCollect"] = false,
		["routeDelivery"] = true,
		["deliveryVehicle"] = 1747439474,
		["deliveryText"] = "CONTINUAR",
		["usingVehicle"] = false,
		["collectText"] = "COLETAR",
		["collectRandom"] = false,
		["collectButtonDistance"] = 1,
		["collectShowDistance"] = 10,
		["collectDuration"] = 10000,
		["collectAnim"] = { false,"amb@prop_human_atm@male@idle_a","idle_a",true },
		["collectConsume"] = {
			["min"] = 2,
			["max"] = 3
		},
		["collectCoords"] = {
			{ 263.11,216.8,101.69,340.16 },
			{ 263.98,216.49,101.69,342.07 },
			{ 264.78,216.19,101.69,341.62 },
			{ 265.64,215.87,101.69,345.01 },
			{ 266.46,215.51,101.69,345.13 },
			{ 266.63,214.9,101.69,253.25 },
			{ 266.38,214.22,101.69,253.76 },
			{ 266.1,213.44,101.69,252.3 },
			{ 265.8,212.68,101.69,254.85 },
			{ 265.58,212.02,101.69,256.95 },
			{ 264.91,211.73,101.69,158.15 },
			{ 264.13,211.98,101.69,159.89 },
			{ 263.16,212.33,101.69,165.34 },
			{ 262.4,212.62,101.69,161.24 },
			{ 261.67,212.88,101.69,161.44 }
		},
		["deliveryItem"] = "pouch",
		["deliveryName"] = "Malotes",
		["deliveryConsume"] = {
			["min"] = 2,
			["max"] = 3
		},
		["deliveryCoords"] = {
			{ 285.47,143.37,104.17,158.75 },
			{ 527.36,-160.7,57.09,272.13 },
			{ 1153.64,-326.75,69.2,99.22 },
			{ 1167.01,-456.07,66.79,345.83 },
			{ 1138.25,-468.9,66.73,73.71 },
			{ 1077.71,-776.5,58.23,187.09 },
			{ 296.46,-894.25,29.23,249.45 },
			{ 295.76,-896.14,29.22,252.29 },
			{ 147.58,-1035.79,29.34,161.58 },
			{ 145.93,-1035.19,29.34,161.58 },
			{ 289.1,-1256.87,29.44,277.8 },
			{ 288.82,-1282.36,29.64,272.13 },
			{ 126.85,-1296.59,29.27,25.52 },
			{ 127.84,-1296.03,29.27,28.35 },
			{ 33.16,-1348.25,29.49,175.75 },
			{ 24.48,-945.95,29.35,343.0 },
			{ 5.24,-919.83,29.55,252.29 },
			{ 112.58,-819.4,31.34,158.75 },
			{ 114.44,-776.41,31.41,343.0 },
			{ 111.25,-775.25,31.44,345.83 },
			{ -27.99,-724.54,44.23,345.83 },
			{ -30.19,-723.71,44.23,343.0 },
			{ -203.8,-861.37,30.26,31.19 },
			{ -301.7,-830.01,32.42,351.5 },
			{ -303.24,-829.74,32.42,354.34 },
			{ -258.87,-723.38,33.48,70.87 },
			{ -256.2,-715.99,33.53,73.71 },
			{ -254.41,-692.49,33.6,161.58 },
			{ -537.85,-854.49,29.28,178.59 },
			{ -660.73,-854.07,24.48,187.09 },
			{ -710.01,-818.9,23.72,0.0 },
			{ -712.89,-818.92,23.72,0.0 },
			{ -717.7,-915.65,19.21,85.04 },
			{ -821.63,-1081.88,11.12,31.19 },
			{ -1315.71,-834.75,16.95,314.65 },
			{ -1314.75,-836.03,16.95,314.65 },
			{ -1305.41,-706.37,25.33,127.56 },
			{ -1570.14,-546.72,34.95,218.27 },
			{ -1571.06,-547.39,34.95,215.44 },
			{ -1431.15,-447.75,35.91,28.35 },
			{ -1415.94,-212.04,46.51,235.28 },
			{ -1430.18,-211.06,46.51,113.39 },
			{ -1409.76,-100.47,52.39,104.89 },
			{ -1410.32,-98.75,52.42,110.56 },
			{ -1282.52,-210.92,42.44,306.15 },
			{ -1286.28,-213.44,42.44,119.06 },
			{ -1285.54,-224.32,42.44,306.15 },
			{ -1289.31,-226.78,42.44,124.73 },
			{ -1205.02,-326.3,37.83,113.39 },
			{ -1205.78,-324.8,37.86,116.23 },
			{ -866.69,-187.74,37.84,121.89 },
			{ -867.63,-186.07,37.84,119.06 },
			{ -846.31,-341.26,38.67,113.39 },
			{ -846.81,-340.2,38.67,116.23 },
			{ -721.06,-415.58,34.98,269.3 },
			{ -556.18,-205.18,38.22,119.06 },
			{ -57.66,-92.65,57.78,294.81 },
			{ 89.73,2.46,68.29,343.0 },
			{ -165.17,232.77,94.91,90.71 },
			{ -165.16,234.8,94.91,85.04 },
			{ 158.6,234.23,106.63,343.0 },
			{ 228.18,338.38,105.56,158.75 },
			{ 380.76,323.4,103.56,158.75 },
			{ 357.01,173.54,103.07,340.16 }
		},
		["deliveryPayment"] = {
			["min"] = 35,
			["max"] = 45,
			["item"] = "dollars"
		}
	},
	["Lenhador"] = {
		["coords"] = { 2433.45,5013.46,46.99 },
		["upgradeStress"] = 1,
		["routeCollect"] = false,
		["routeDelivery"] = false,
		["deliveryVehicle"] = -667151410,
		["deliveryText"] = "ENTREGAR",
		["usingVehicle"] = false,
		["collectText"] = "COLETAR",
		["collectRandom"] = false,
		["collectButtonDistance"] = 1,
		["collectShowDistance"] = 200,
		["collectDuration"] = 3000,
		["collectAnim"] = { false,"melee@hatchet@streamed_core","plyr_front_takedown_b",true },
		["collectConsume"] = {
			["min"] = 3,
			["max"] = 5
		},
		["collectCoords"] = {
			{ 2462.11,5033.0,45.71,255.12 },
			{ 2479.68,5021.69,44.75,348.67 },
			{ 2489.13,4999.72,45.93,263.63 },
			{ 2507.57,5013.95,45.09,297.64 },
			{ 2541.51,5021.64,45.36,291.97 },
			{ 2556.24,5049.26,44.08,337.33 },
			{ 2550.1,5070.64,44.65,17.01 },
			{ 2516.47,5065.72,46.2,79.38 },
			{ 2488.62,5080.33,45.97,59.53 },
			{ 2470.7,5082.78,46.86,59.53 },
			{ 2455.31,5100.39,46.86,348.67 },
			{ 2438.91,5103.43,46.86,209.77 },
			{ 2423.2,5106.26,46.34,354.34 },
			{ 2413.01,5129.45,47.28,34.02 },
			{ 2398.45,5093.71,47.28,257.96 },
			{ 2414.81,5077.38,46.76,294.81 },
			{ 2441.5,5060.3,46.2,170.08 },
			{ 2490.0,5053.47,49.88,260.79 },
			{ 2477.64,5067.59,48.61,116.23 }
		},
		["deliveryItem"] = "woodlog",
		["deliveryName"] = "Toras de Madeira",
		["deliveryConsume"] = {
			["min"] = 3,
			["max"] = 5
		},
		["deliveryCoords"] = {
			{ -513.92,-1019.31,23.47 },
			{ -1604.18,-832.26,10.08 },
			{ -536.48,-45.61,42.57 },
			{ -53.01,79.35,71.62 },
			{ 581.16,139.13,99.48 },
			{ 814.39,-93.48,80.6 },
			{ 1106.93,-355.03,67.01 },
			{ 1070.71,-780.46,58.36 },
			{ 1142.82,-986.58,45.91 },
			{ 1200.55,-1276.6,35.23 },
			{ 967.81,-1829.29,31.24 },
			{ 809.16,-2222.61,29.65 },
			{ 684.61,-2741.62,6.02 },
			{ 263.47,-2506.62,6.45 },
			{ 94.66,-2676.38,6.01 },
			{ -43.87,-2519.91,7.4 },
			{ 182.93,-2027.68,18.28 },
			{ -306.86,-2191.84,10.84 },
			{ -570.95,-1775.95,23.19 },
			{ -350.03,-1569.9,25.23 },
			{ -128.36,-1394.12,29.57 },
			{ 67.84,-1399.02,29.37 },
			{ 343.13,-1297.91,32.51 },
			{ 485.92,-1477.41,29.29 },
			{ 139.81,-1337.41,29.21 },
			{ 263.82,-1346.16,31.93 },
			{ -723.33,-1112.41,10.66 },
			{ -842.54,-1128.21,7.02 },
			{ 488.46,-898.56,25.94 }
		},
		["deliveryPayment"] = {
			["min"] = 85,
			["max"] = 115,
			["item"] = "dollars"
		}
	},
	["Minerador"] = {
		["coords"] = { 2949.37,2751.78,43.35 },
		["upgradeStress"] = 1,
		["routeCollect"] = false,
		["routeDelivery"] = false,
		["usingVehicle"] = false,
		["collectText"] = "MINERAR",
		["collectRandom"] = true,
		["collectButtonDistance"] = 1,
		["collectShowDistance"] = 200,
		["collectDuration"] = 10000,
		["collectAnim"] = { false,"amb@world_human_hammering@male@base","base",true },
		["collectConsume"] = {
			["min"] = 2,
			["max"] = 3
		},
		["collectCoords"] = {
			{ 2954.97,2757.45,43.64,206.93 },
			{ 2954.26,2770.54,38.91,110.56 },
			{ 2950.65,2768.88,39.01,209.77 },
			{ 2948.87,2767.8,38.96,127.56 },
			{ 2946.18,2766.28,39.51,246.62 },
			{ 2937.86,2772.53,39.24,138.9 },
			{ 2936.72,2774.99,39.14,226.78 },
			{ 2938.88,2775.1,39.23,172.92 },
			{ 2935.27,2784.45,39.51,121.89 },
			{ 2929.28,2788.48,39.87,79.38 },
			{ 2928.7,2791.01,40.25,116.23 },
			{ 2927.25,2792.33,40.47,90.71 },
			{ 2926.09,2793.46,40.62,184.26 },
			{ 2924.97,2795.54,40.81,204.1 },
			{ 2926.11,2797.06,40.98,153.08 },
			{ 2922.44,2798.26,41.13,79.38 },
			{ 2920.22,2798.71,41.15,277.8 },
			{ 2918.89,2800.54,41.38,110.56 },
			{ 2927.07,2813.36,44.67,90.71 },
			{ 2936.11,2814.49,43.84,246.62 },
			{ 2939.4,2813.65,42.85,124.73 },
			{ 2943.76,2817.82,42.85,323.15 },
			{ 2945.6,2820.0,42.87,79.38 },
			{ 2948.59,2819.71,42.7,19.85 },
			{ 2951.69,2816.75,42.28,110.56 },
			{ 2955.2,2819.49,42.44,294.81 },
			{ 2959.22,2821.02,42.93,192.76 },
			{ 2971.28,2798.97,41.35,272.13 },
			{ 2973.5,2798.54,41.42,99.22 },
			{ 2975.95,2793.38,40.76,223.94 },
			{ 2978.85,2790.0,40.56,343.0 },
			{ 2980.99,2787.0,40.42,260.79 },
			{ 2973.43,2774.84,38.18,76.54 },
			{ 2971.07,2774.55,38.2,269.3 },
			{ 2970.28,2774.72,38.22,79.38 },
			{ 2968.99,2776.57,38.38,170.08 },
			{ 2964.91,2774.48,39.26,141.74 },
			{ 2963.52,2773.31,39.61,303.31 },
			{ 2943.25,2760.74,41.99,116.23 },
			{ 2944.03,2756.95,42.85,130.4 },
			{ 2938.09,2757.63,44.01,110.56 }
		},
		["deliveryItem"] = { "geode" }
	},
	["Mergulhador"] = {
		["coords"] = { 1520.56,3780.08,34.46 },
		["upgradeStress"] = 1,
		["routeCollect"] = false,
		["routeDelivery"] = false,
		["usingVehicle"] = false,
		["collectText"] = "COLETAR",
		["collectRandom"] = true,
		["collectButtonDistance"] = 1,
		["collectShowDistance"] = 500,
		["collectDuration"] = 12500,
		["collectAnim"] = { false,"amb@prop_human_parking_meter@female@idle_a","idle_a_female",true },
		["collectConsume"] = {
			["min"] = 1,
			["max"] = 3
		},
		["collectCoords"] = {
			{ 1329.3,4102.87,-3.49 },
			{ 1356.37,4074.8,-5.8 },
			{ 1433.28,4095.57,-8.02 },
			{ 1508.55,4104.44,-2.78 },
			{ 1508.91,4162.71,11.31 }
		},
		["deliveryItem"] = {
			"octopus",
			"shrimp",
			"carp",
			"codfish",
			"catfish",
			"goldenfish",
			"horsefish",
			"tilapia",
			"pacu",
			"pirarucu",
			"tambaqui",
			"bait",
			"emptybottle",
			"plastic",
			"glass",
			"rubber",
			"aluminum",
			"copper",
			"silvercoin",
			"goldcoin",
			"roadsigns",
			"sheetmetal",
			"techtrash"
		}
	},
	["Colheita"] = {
		["coords"] = { 2117.61,5106.62,45.95 },
		["upgradeStress"] = 1,
		["routeCollect"] = false,
		["routeDelivery"] = false,
		["usingVehicle"] = false,
		["collectText"] = "COLETAR",
		["collectRandom"] = true,
		["collectButtonDistance"] = 1,
		["collectShowDistance"] = 500,
		["collectDuration"] = 10000,
		["collectAnim"] = { false,"amb@prop_human_movie_bulb@base","base",true },
		["collectConsume"] = {
			["min"] = 3,
			["max"] = 4
		},
		["collectCoords"] = {
			{ 2108.99,5075.07,43.83,187.09 },
			{ 2100.52,5085.49,44.37,102.05 }
		},
		["deliveryItem"] = {
			"tomato",
			"apple",
			"banana",
			"passion",
			"grape",
			"tange",
			"orange",
			"coffee2",
			"strawberry"
		}
	},
	["Ballas"] = {
		["coords"] = { 106.37,-1993.93,14.88 },
		["upgradeStress"] = 2,
		["routeCollect"] = true,
		["routeDelivery"] = false,
		["usingVehicle"] = false,
		["collectRandom"] = false,
		["perm"] = "Ballas",
		["collectButtonDistance"] = 1,
		["collectShowDistance"] = 30,
		["collectConsume"] = {
			["min"] = 1,
			["max"] = 2
		},
		["collectCoords"] = {
			{ 264.03,-2504.0,6.44 },
			{ 766.8,-2481.74,20.17 },
			{ 939.42,-2127.42,30.62 },
			{ 1458.88,-1930.6,71.8 },
			{ 1231.64,-1083.07,38.52 },
			{ 1210.62,-448.83,66.84 },
			{ 642.3,260.3,103.29 },
			{ 232.24,365.21,106.04 },
			{ -242.04,279.66,92.03 },
			{ -719.1,256.83,79.9 },
			{ -766.31,-157.88,37.59 },
			{ -655.01,-414.25,35.47 },
			{ -773.41,-633.28,29.82 },
			{ -1004.09,-307.64,38.82 },
			{ -1253.56,-295.91,37.31 },
			{ -1484.26,-390.23,39.09 },
			{ -1388.38,-586.98,30.21 },
			{ -1190.9,-742.94,20.24 },
			{ -818.51,-1107.07,11.17 },
			{ -1191.49,-1340.36,4.94 },
			{ -1271.11,-1200.9,5.36 },
			{ -723.29,-855.27,23.0 },
			{ -582.15,-1000.61,22.33 },
			{ -296.32,-1295.82,31.26 },
			{ -115.84,-1772.65,29.82 },
			{ 222.56,-1842.68,27.11 }
		},
		["deliveryItem"] = "wheatflour"
	},
	["Vagos"] = {
		["coords"] = { 426.4,-2052.29,18.74 },
		["upgradeStress"] = 2,
		["routeCollect"] = true,
		["routeDelivery"] = false,
		["usingVehicle"] = false,
		["collectRandom"] = false,
		["perm"] = "Vagos",
		["collectButtonDistance"] = 1,
		["collectShowDistance"] = 30,
		["collectConsume"] = {
			["min"] = 1,
			["max"] = 2
		},
		["collectCoords"] = {
			{ 264.03,-2504.0,6.44 },
			{ 766.8,-2481.74,20.17 },
			{ 939.42,-2127.42,30.62 },
			{ 1458.88,-1930.6,71.8 },
			{ 1231.64,-1083.07,38.52 },
			{ 1210.62,-448.83,66.84 },
			{ 642.3,260.3,103.29 },
			{ 232.24,365.21,106.04 },
			{ -242.04,279.66,92.03 },
			{ -719.1,256.83,79.9 },
			{ -766.31,-157.88,37.59 },
			{ -655.01,-414.25,35.47 },
			{ -773.41,-633.28,29.82 },
			{ -1004.09,-307.64,38.82 },
			{ -1253.56,-295.91,37.31 },
			{ -1484.26,-390.23,39.09 },
			{ -1388.38,-586.98,30.21 },
			{ -1190.9,-742.94,20.24 },
			{ -818.51,-1107.07,11.17 },
			{ -1191.49,-1340.36,4.94 },
			{ -1271.11,-1200.9,5.36 },
			{ -723.29,-855.27,23.0 },
			{ -582.15,-1000.61,22.33 },
			{ -296.32,-1295.82,31.26 },
			{ -115.84,-1772.65,29.82 },
			{ 222.56,-1842.68,27.11 }
		},
		["deliveryItem"] = "wheatflour"
	},
	["DaNang"] = {
		["coords"] = { 228.49,-1755.92,25.24 },
		["upgradeStress"] = 2,
		["routeCollect"] = true,
		["routeDelivery"] = false,
		["usingVehicle"] = false,
		["collectRandom"] = false,
		["perm"] = "DaNang",
		["collectButtonDistance"] = 1,
		["collectShowDistance"] = 30,
		["collectConsume"] = {
			["min"] = 1,
			["max"] = 2
		},
		["collectCoords"] = {
			{ 264.03,-2504.0,6.44 },
			{ 766.8,-2481.74,20.17 },
			{ 939.42,-2127.42,30.62 },
			{ 1458.88,-1930.6,71.8 },
			{ 1231.64,-1083.07,38.52 },
			{ 1210.62,-448.83,66.84 },
			{ 642.3,260.3,103.29 },
			{ 232.24,365.21,106.04 },
			{ -242.04,279.66,92.03 },
			{ -719.1,256.83,79.9 },
			{ -766.31,-157.88,37.59 },
			{ -655.01,-414.25,35.47 },
			{ -773.41,-633.28,29.82 },
			{ -1004.09,-307.64,38.82 },
			{ -1253.56,-295.91,37.31 },
			{ -1484.26,-390.23,39.09 },
			{ -1388.38,-586.98,30.21 },
			{ -1190.9,-742.94,20.24 },
			{ -818.51,-1107.07,11.17 },
			{ -1191.49,-1340.36,4.94 },
			{ -1271.11,-1200.9,5.36 },
			{ -723.29,-855.27,23.0 },
			{ -582.15,-1000.61,22.33 },
			{ -296.32,-1295.82,31.26 },
			{ -115.84,-1772.65,29.82 },
			{ 222.56,-1842.68,27.11 }
		},
		["deliveryItem"] = "wheatflour"
	},
	["Families"] = {
		["coords"] = { -196.56,-1700.45,29.39 },
		["upgradeStress"] = 2,
		["routeCollect"] = true,
		["routeDelivery"] = false,
		["usingVehicle"] = false,
		["collectRandom"] = false,
		["perm"] = "Families",
		["collectButtonDistance"] = 1,
		["collectShowDistance"] = 30,
		["collectConsume"] = {
			["min"] = 1,
			["max"] = 2
		},
		["collectCoords"] = {
			{ 264.03,-2504.0,6.44 },
			{ 766.8,-2481.74,20.17 },
			{ 939.42,-2127.42,30.62 },
			{ 1458.88,-1930.6,71.8 },
			{ 1231.64,-1083.07,38.52 },
			{ 1210.62,-448.83,66.84 },
			{ 642.3,260.3,103.29 },
			{ 232.24,365.21,106.04 },
			{ -242.04,279.66,92.03 },
			{ -719.1,256.83,79.9 },
			{ -766.31,-157.88,37.59 },
			{ -655.01,-414.25,35.47 },
			{ -773.41,-633.28,29.82 },
			{ -1004.09,-307.64,38.82 },
			{ -1253.56,-295.91,37.31 },
			{ -1484.26,-390.23,39.09 },
			{ -1388.38,-586.98,30.21 },
			{ -1190.9,-742.94,20.24 },
			{ -818.51,-1107.07,11.17 },
			{ -1191.49,-1340.36,4.94 },
			{ -1271.11,-1200.9,5.36 },
			{ -723.29,-855.27,23.0 },
			{ -582.15,-1000.61,22.33 },
			{ -296.32,-1295.82,31.26 },
			{ -115.84,-1772.65,29.82 },
			{ 222.56,-1842.68,27.11 }
		},
		["deliveryItem"] = "wheatflour"
	},
	["Aztecas"] = {
		["coords"] = { 468.74,-1742.5,25.54 },
		["upgradeStress"] = 2,
		["routeCollect"] = true,
		["routeDelivery"] = false,
		["usingVehicle"] = false,
		["collectRandom"] = false,
		["perm"] = "Aztecas",
		["collectButtonDistance"] = 1,
		["collectShowDistance"] = 30,
		["collectConsume"] = {
			["min"] = 1,
			["max"] = 2
		},
		["collectCoords"] = {
			{ 264.03,-2504.0,6.44 },
			{ 766.8,-2481.74,20.17 },
			{ 939.42,-2127.42,30.62 },
			{ 1458.88,-1930.6,71.8 },
			{ 1231.64,-1083.07,38.52 },
			{ 1210.62,-448.83,66.84 },
			{ 642.3,260.3,103.29 },
			{ 232.24,365.21,106.04 },
			{ -242.04,279.66,92.03 },
			{ -719.1,256.83,79.9 },
			{ -766.31,-157.88,37.59 },
			{ -655.01,-414.25,35.47 },
			{ -773.41,-633.28,29.82 },
			{ -1004.09,-307.64,38.82 },
			{ -1253.56,-295.91,37.31 },
			{ -1484.26,-390.23,39.09 },
			{ -1388.38,-586.98,30.21 },
			{ -1190.9,-742.94,20.24 },
			{ -818.51,-1107.07,11.17 },
			{ -1191.49,-1340.36,4.94 },
			{ -1271.11,-1200.9,5.36 },
			{ -723.29,-855.27,23.0 },
			{ -582.15,-1000.61,22.33 },
			{ -296.32,-1295.82,31.26 },
			{ -115.84,-1772.65,29.82 },
			{ 222.56,-1842.68,27.11 }
		},
		["deliveryItem"] = "wheatflour"
	},
	["Crips"] = {
		["coords"] = { -1120.62,-1555.22,0.98 },
		["upgradeStress"] = 2,
		["routeCollect"] = true,
		["routeDelivery"] = false,
		["usingVehicle"] = false,
		["collectRandom"] = false,
		["perm"] = "Crips",
		["collectButtonDistance"] = 1,
		["collectShowDistance"] = 30,
		["collectConsume"] = {
			["min"] = 1,
			["max"] = 2
		},
		["collectCoords"] = {
			{ 264.03,-2504.0,6.44 },
			{ 766.8,-2481.74,20.17 },
			{ 939.42,-2127.42,30.62 },
			{ 1458.88,-1930.6,71.8 },
			{ 1231.64,-1083.07,38.52 },
			{ 1210.62,-448.83,66.84 },
			{ 642.3,260.3,103.29 },
			{ 232.24,365.21,106.04 },
			{ -242.04,279.66,92.03 },
			{ -719.1,256.83,79.9 },
			{ -766.31,-157.88,37.59 },
			{ -655.01,-414.25,35.47 },
			{ -773.41,-633.28,29.82 },
			{ -1004.09,-307.64,38.82 },
			{ -1253.56,-295.91,37.31 },
			{ -1484.26,-390.23,39.09 },
			{ -1388.38,-586.98,30.21 },
			{ -1190.9,-742.94,20.24 },
			{ -818.51,-1107.07,11.17 },
			{ -1191.49,-1340.36,4.94 },
			{ -1271.11,-1200.9,5.36 },
			{ -723.29,-855.27,23.0 },
			{ -582.15,-1000.61,22.33 },
			{ -296.32,-1295.82,31.26 },
			{ -115.84,-1772.65,29.82 },
			{ 222.56,-1842.68,27.11 }
		},
		["deliveryItem"] = "wheatflour"
	},
	["Motorista"] = {
		["coords"] = { 453.05,-607.72,28.59 },
		["upgradeStress"] = 1,
		["routeCollect"] = true,
		["routeDelivery"] = false,
		["collectVehicle"] = -713569950,
		["usingVehicle"] = true,
		["collectText"] = "CONTINUAR",
		["collectRandom"] = false,
		["collectButtonDistance"] = 15,
		["collectShowDistance"] = 100,
		["collectConsume"] = {
			["min"] = 75,
			["max"] = 105
		},
		["collectCoords"] = {
			{ 418.92,-571.03,28.68 },
			{ 923.78,186.7,75.81 },
			{ 1644.11,1166.89,84.26 },
			{ 2104.23,2630.44,51.76 },
			{ 2402.38,2918.04,49.31 },
			{ 1786.57,3356.21,40.51 },
			{ 1620.82,3813.85,34.94 },
			{ 1911.6,3793.09,32.31 },
			{ 2493.37,4088.69,38.04 },
			{ 2068.51,4693.82,41.19 },
			{ 1676.39,4822.41,42.02 },
			{ 2250.19,4986.36,42.23 },
			{ 1667.97,6397.56,30.12 },
			{ 235.51,6574.7,31.57 },
			{ -85.11,6584.3,29.47 },
			{ -137.53,6440.85,31.42 },
			{ -235.39,6304.34,31.39 },
			{ -422.67,6031.56,31.34 },
			{ -756.66,5515.02,35.49 },
			{ -1538.42,4976.01,62.28 },
			{ -2246.9,4283.26,46.68 },
			{ -2731.13,2292.23,19.05 },
			{ -3233.06,1009.3,12.18 },
			{ -3002.44,416.76,14.97 },
			{ -1960.25,-504.23,11.82 },
			{ -1371.7,-982.24,8.43 },
			{ -1166.92,-1471.31,4.34 },
			{ -1052.56,-1511.78,5.09 },
			{ -900.75,-1206.71,4.94 },
			{ -628.94,-924.13,23.28 },
			{ -557.24,-845.49,27.61 },
			{ -1059.11,-2066.85,13.2 },
			{ -543.79,-2194.84,6.01 },
			{ -60.68,-1806.51,27.21 },
			{ 228.64,-1837.9,26.73 },
			{ 291.46,-2002.07,20.31 },
			{ 739.81,-2233.34,29.24 },
			{ 1045.03,-2384.93,30.28 },
			{ 1200.9,-685.64,60.6 },
			{ 954.37,-146.43,74.45 },
			{ 566.42,218.64,102.54 },
			{ -429.1,252.36,83.02 },
			{ -732.3,3.21,37.88 },
			{ -1244.38,-302.64,37.32 },
			{ -1403.93,-566.3,30.22 },
			{ -1202.05,-876.7,13.28 },
			{ -691.37,-961.63,19.79 },
			{ -387.71,-851.57,31.5 },
			{ 149.9,-1028.06,29.25 },
			{ 120.26,-1356.98,29.19 },
			{ 118.29,-785.88,31.3 },
			{ 98.34,-628.98,31.57 }
		},
		["deliveryItem"] = "dollars"
	},
	["BurgerShot"] = {
		["coords"] = { -1192.07,-901.55,13.99 },
		["upgradeStress"] = 1,
		["routeCollect"] = false,
		["routeDelivery"] = false,
		["deliveryVehicle"] = 1131912276,
		["usingVehicle"] = false,
		["collectRandom"] = false,
		["deliveryText"] = "ENTREGAR",
		["deliveryItem"] = "bsbox",
		["deliveryName"] = "Combo",
		["deliveryConsume"] = {
			["min"] = 1,
			["max"] = 1
		},
		["deliveryCoords"] = {
			{ -1754.11,-708.92,10.4 },
			{ -1756.32,-692.6,10.15 },
			{ -1777.07,-701.48,10.53 },
			{ -1771.12,-677.5,10.39 },
			{ -1787.98,-672.06,10.66 },
			{ -1793.33,-663.88,10.61 },
			{ -1803.88,-661.77,10.73 },
			{ -1814.05,-656.68,10.89 },
			{ -1812.28,-640.74,10.95 },
			{ -1836.41,-631.81,10.76 },
			{ -1838.87,-629.36,11.25 },
			{ -1864.88,-594.5,11.84 },
			{ -1876.99,-584.45,11.86 },
			{ -1883.36,-578.99,11.86 },
			{ -1901.25,-586.09,11.88 },
			{ -1913.46,-574.11,11.44 },
			{ -1919.96,-569.72,11.92 },
			{ -1918.68,-542.64,11.83 },
			{ -1945.77,-544.81,11.87 },
			{ -1947.02,-543.98,11.87 },
			{ -1944.61,-527.77,11.83 },
			{ -1957.81,-528.1,12.19 },
			{ -1965.99,-509.78,11.84 },
			{ -1979.92,-520.13,11.89 },
			{ -1068.01,-1163.61,2.75 },
			{ -1074.19,-1152.64,2.16 },
			{ -1063.54,-1160.33,2.75 },
			{ -1045.96,-1159.92,2.16 },
			{ -1040.55,-1135.88,2.16 },
			{ -1034.62,-1147.16,2.16 },
			{ -1034.1,-1128.0,2.16 },
			{ -1024.44,-1139.9,2.75 },
			{ -991.78,-1103.41,2.14 },
			{ -985.81,-1121.73,4.55 },
			{ -978.1,-1108.4,2.14 },
			{ -982.82,-1083.65,2.54 },
			{ -970.33,-1093.08,2.14 },
			{ -959.81,-1109.92,2.14 },
			{ -952.45,-1077.56,2.66 },
			{ -938.63,-1087.92,2.14 },
			{ -943.12,-1075.31,2.75 },
			{ -1122.65,-1089.33,2.54 },
			{ -1114.1,-1069.37,2.14 },
			{ -1104.05,-1059.99,2.73 },
			{ -1108.74,-1040.9,2.14 },
			{ -1099.68,-1046.84,2.14 },
			{ -1091.96,-1039.88,2.14 },
			{ -1080.58,-1035.98,2.14 },
			{ -1041.7,-1025.84,2.75 },
			{ -1022.3,-1023.12,2.14 },
			{ -1023.21,-997.93,2.14 },
			{ -1014.32,-997.08,2.14 },
			{ -1007.18,-989.48,2.14 },
			{ -989.19,-989.67,2.06 },
			{ -995.49,-967.27,2.54 },
			{ -1667.72,-441.13,40.36 },
			{ -1643.14,-411.65,42.07 },
			{ -1622.87,-379.78,43.71 },
			{ -1597.22,-352.08,45.97 },
			{ -1098.1,-1678.65,4.35 },
			{ -1097.49,-1673.1,8.39 },
			{ -1058.41,-1657.39,4.67 },
			{ -1059.87,-1658.71,4.67 },
			{ -1069.8,-1653.19,4.41 },
			{ -1075.3,-1645.05,4.5 },
			{ -1071.7,-1636.56,8.19 },
			{ -1077.21,-1621.09,4.48 },
			{ -1078.8,-1616.4,4.43 },
			{ -1093.58,-1608.22,8.46 },
			{ -1105.56,-1596.97,4.62 },
			{ -1114.83,-1577.78,4.53 },
			{ -1120.16,-1583.05,8.68 },
			{ -1114.1,-1579.74,8.68 },
			{ -1112.32,-1578.44,8.68 },
			{ -1039.21,-1610.32,5.11 },
			{ -1030.12,-1604.25,4.95 },
			{ -1056.93,-1587.3,4.62 },
			{ -1041.53,-1590.48,4.99 },
			{ -1027.72,-1575.45,5.26 },
			{ -1057.71,-1540.73,5.11 },
			{ -1065.92,-1545.87,4.9 },
			{ -1076.92,-1554.06,4.63 },
			{ -1084.43,-1559.28,4.79 },
			{ -1108.28,-1527.19,6.77 },
			{ -1087.35,-1529.28,4.7 },
			{ -1078.54,-1524.01,5.09 },
			{ -1070.43,-1515.19,5.29 },
			{ -1085.88,-1504.0,5.71 },
			{ -1086.22,-1492.37,5.12 },
			{ -1102.43,-1491.95,4.89 },
			{ -1111.02,-1497.96,4.67 },
			{ -1116.92,-1505.61,4.4 },
			{ -1130.09,-1496.76,4.43 },
			{ -1117.79,-1488.46,4.73 },
			{ -1109.09,-1482.42,4.92 },
			{ -1135.16,-1468.29,4.62 },
			{ -1142.29,-1461.15,4.62 },
			{ -1146.19,-1466.4,4.5 },
			{ -1146.25,-1466.47,7.75 },
			{ -1142.3,-1461.13,7.68 },
			{ -1136.53,-1466.25,7.68 },
			{ -1150.1,-1473.54,4.38 },
			{ -1247.02,-1358.29,7.82 },
			{ -1256.24,-1359.98,4.03 },
			{ -1256.38,-1330.98,4.08 },
			{ -1271.8,-1297.47,8.29 },
			{ -1272.55,-1295.41,8.29 },
			{ -1270.08,-1296.32,3.99 },
			{ -1308.23,-1227.87,4.89 },
			{ -1305.61,-1228.66,8.98 },
			{ -1306.43,-1226.55,8.98 },
			{ -1309.35,-1220.5,8.98 },
			{ -1352.58,-1184.54,4.5 },
			{ -1352.5,-1176.88,4.5 },
			{ -1349.67,-1161.59,4.5 },
			{ -1335.95,-1146.94,6.72 },
			{ -1221.16,-1240.65,7.03 },
			{ -1222.94,-1241.2,7.03 },
			{ -1229.28,-1243.51,7.03 },
			{ -1230.92,-1244.17,7.03 },
			{ -1237.23,-1246.48,7.03 },
			{ -1238.86,-1247.15,7.03 },
			{ -1243.87,-1241.11,11.02 },
			{ -1237.52,-1238.76,11.02 },
			{ -1235.88,-1238.17,11.02 },
			{ -1229.6,-1235.82,11.02 },
			{ -1227.89,-1235.27,11.02 },
			{ -1221.27,-1232.82,11.02 },
			{ -1241.65,-1208.66,8.51 },
			{ -1343.16,-1091.27,6.93 },
			{ -1348.56,-1081.81,6.94 },
			{ -1372.32,-901.26,12.47 },
			{ -1354.16,-907.68,12.65 },
			{ -1364.25,-915.32,12.65 },
			{ -1317.07,-903.92,11.31 },
			{ -1332.98,-907.54,11.49 },
			{ -1328.66,-919.42,11.49 },
			{ -1493.8,-668.34,29.02 },
			{ -1498.18,-664.72,29.02 },
			{ -1495.35,-661.56,29.02 },
			{ -1490.74,-658.23,29.02 },
			{ -1486.74,-655.34,29.57 },
			{ -1482.15,-652.02,29.57 },
			{ -1478.2,-649.12,29.57 },
			{ -1473.62,-645.79,29.57 },
			{ -1469.64,-642.9,29.57 },
			{ -1465.02,-639.58,29.57 },
			{ -1461.2,-640.91,29.57 },
			{ -1452.34,-653.26,29.57 },
			{ -1454.41,-656.01,29.57 },
			{ -1459.0,-659.35,29.57 },
			{ -1462.97,-662.21,29.57 },
			{ -1467.56,-665.56,29.57 },
			{ -1471.51,-668.41,29.57 },
			{ -1489.96,-671.39,33.38 },
			{ -1493.78,-668.26,33.38 },
			{ -1498.18,-664.64,33.38 },
			{ -1495.33,-661.56,33.38 },
			{ -1490.74,-658.21,33.38 },
			{ -1486.73,-655.35,33.38 },
			{ -1482.19,-652.02,33.38 },
			{ -1478.2,-649.14,33.38 },
			{ -1473.62,-645.79,33.38 },
			{ -1469.61,-642.88,33.38 },
			{ -1465.04,-639.54,33.38 },
			{ -1461.21,-640.89,33.38 },
			{ -1457.88,-645.48,33.38 },
			{ -1455.62,-648.58,33.38 },
			{ -1452.32,-653.23,33.38 },
			{ -1454.41,-655.93,33.38 },
			{ -1459.01,-659.35,33.38 },
			{ -1462.97,-662.21,33.38 },
			{ -1467.54,-665.55,33.38 },
			{ -1471.51,-668.42,33.38 },
			{ -1476.11,-671.77,33.38 },
			{ -1564.48,-300.31,48.22 },
			{ -1569.73,-295.26,48.27 },
			{ -1574.92,-290.2,48.27 },
			{ -1582.57,-278.07,48.27 },
			{ -1583.76,-265.71,48.27 },
			{ -1555.04,-290.0,48.27 },
			{ -1560.63,-285.24,48.27 },
			{ -1566.03,-280.2,48.27 },
			{ -1560.93,-274.72,48.27 },
			{ -1555.74,-279.57,48.27 },
			{ -1550.33,-284.2,48.27 },
			{ -1542.68,-278.65,48.27 },
			{ -1541.2,-276.69,48.27 },
			{ -1538.0,-272.51,48.27 },
			{ -1536.52,-270.58,48.27 },
			{ -1533.13,-260.21,48.27 },
			{ -1538.18,-254.71,48.27 },
			{ -1542.93,-249.0,48.27 },
			{ -1084.37,-951.7,2.36 },
			{ -1085.15,-935.63,3.08 },
			{ -1074.83,-939.04,2.38 },
			{ -1053.94,-932.45,3.35 },
			{ -1043.57,-923.76,3.15 },
			{ -1031.22,-902.99,3.69 },
			{ -1022.58,-896.95,5.41 },
			{ -987.41,-891.54,2.14 },
			{ -971.34,-885.67,2.14 },
			{ -951.49,-906.02,2.75 },
			{ -948.25,-910.41,2.75 },
			{ -947.72,-928.0,2.14 },
			{ -934.99,-939.37,2.14 },
			{ -927.75,-949.64,2.75 },
			{ -908.65,-975.89,2.14 },
			{ -900.77,-982.5,2.24 },
			{ -903.17,-1005.9,2.14 },
			{ -884.28,-1072.58,2.53 },
			{ -869.09,-1105.39,2.48 },
			{ -869.47,-1103.38,6.44 }
		},
		["deliveryPayment"] = {
			["min"] = 100,
			["max"] = 150,
			["item"] = "dollars"
		}
	},
	["PopsDiner"] = {
		["coords"] = { 1588.67,6455.92,25.69 },
		["upgradeStress"] = 1,
		["routeCollect"] = false,
		["routeDelivery"] = false,
		["deliveryVehicle"] = 1131912276,
		["usingVehicle"] = false,
		["collectRandom"] = false,
		["deliveryText"] = "ENTREGAR",
		["deliveryItem"] = "paperpackage",
		["deliveryName"] = "Suco Empacotado",
		["deliveryConsume"] = {
			["min"] = 1,
			["max"] = 1
		},
		["deliveryCoords"] = {
			{ 31.06,6596.59,32.82,48.19 },
			{ 11.42,6578.22,33.06,42.52 },
			{ 4.55,6568.4,33.08,317.49 },
			{ -15.24,6557.31,33.24,136.07 },
			{ -27.42,6545.19,33.16,314.65 },
			{ 1.84,6612.57,32.08,204.1 },
			{ -26.53,6597.22,31.86,221.11 },
			{ -44.42,6582.02,32.17,226.78 },
			{ 35.32,6663.16,32.18,348.67 },
			{ -9.74,6654.16,31.69,25.52 },
			{ -41.56,6637.39,31.09,36.86 },
			{ -130.8,6551.85,29.87,34.02 },
			{ -105.62,6528.56,30.16,130.4 },
			{ -214.9,6444.19,31.31,136.07 },
			{ -188.82,6409.72,32.3,226.78 },
			{ -238.32,6423.67,31.46,34.02 },
			{ -213.65,6396.22,33.08,226.78 },
			{ -246.0,6414.51,31.46,311.82 },
			{ -272.53,6401.0,31.51,36.86 },
			{ -247.56,6370.15,31.85,218.27 },
			{ -280.45,6350.77,32.6,215.44 },
			{ -302.33,6326.89,32.89,232.45 },
			{ -407.47,6314.02,28.93,42.52 },
			{ -360.13,6260.51,31.9,136.07 },
			{ -379.89,6252.65,31.85,130.4 },
			{ -451.0,6269.83,30.04,252.29 },
			{ -447.96,6260.17,30.04,340.16 },
			{ -467.98,6206.09,29.55,195.6 },
			{ -454.94,6197.2,29.55,87.88 },
			{ -347.67,6225.21,31.88,51.03 },
			{ -356.96,6207.5,31.85,42.52 },
			{ -366.59,6214.13,31.85,317.49 },
			{ -374.42,6191.13,31.73,25.52 },
			{ 36.02,6549.21,31.42,116.23 }
		},
		["deliveryPayment"] = {
			["min"] = 100,
			["max"] = 150,
			["item"] = "dollars"
		}
	}
}
-----------------------------------------------------------------------------------------------------------------------------------------
-- ACTIVEWORKS
-----------------------------------------------------------------------------------------------------------------------------------------
local activeWorks = {
	["Ballas"] = {},
	["Vagos"] = {},
	["DaNang"] = {},
	["Families"] = {},
	["Aztecas"] = {}
}
-----------------------------------------------------------------------------------------------------------------------------------------
-- VARIABLES
-----------------------------------------------------------------------------------------------------------------------------------------
local collectAmount = {}
local paymentAmount = {}
local deliveryAmount = {}
-----------------------------------------------------------------------------------------------------------------------------------------
-- COLLECTCONSUME
-----------------------------------------------------------------------------------------------------------------------------------------
function cRP.collectConsume(serviceName)
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if works[serviceName]["collectRandom"] then
			local amountItem = 0
			local selectItem = ""

			local randomItem = math.random(#works[serviceName]["deliveryItem"])
			selectItem = works[serviceName]["deliveryItem"][randomItem]
			amountItem = math.random(works[serviceName]["collectConsume"]["min"],works[serviceName]["collectConsume"]["max"])

			if (vRP.inventoryWeight(user_id) + (itemWeight(selectItem) * parseInt(amountItem))) <= vRP.getBackpack(user_id) then
				vRP.generateItem(user_id,selectItem,amountItem,true)

				if works[serviceName]["upgradeStress"] > 0 then
					vRP.upgradeStress(user_id,works[serviceName]["upgradeStress"])
				end

				return true
			else
				TriggerClientEvent("Notify",source,"vermelho","Mochila cheia.",5000)
			end
		else
			if collectAmount[user_id] == nil then
				collectAmount[user_id] = math.random(works[serviceName]["collectConsume"]["min"],works[serviceName]["collectConsume"]["max"])
			end

			local deliveryItem = works[serviceName]["deliveryItem"]
			if (vRP.inventoryWeight(user_id) + (itemWeight(deliveryItem) * parseInt(collectAmount[user_id]))) <= vRP.getBackpack(user_id) then
				vRP.generateItem(user_id,deliveryItem,collectAmount[user_id],true)
				collectAmount[user_id] = nil

				if works[serviceName]["upgradeStress"] > 0 then
					vRP.upgradeStress(user_id,works[serviceName]["upgradeStress"])
				end

				return true
			else
				TriggerClientEvent("Notify",source,"vermelho","Mochila cheia.",5000)
			end
		end
	end

	return false
end
-----------------------------------------------------------------------------------------------------------------------------------------
-- DELIVERYCONSUME
-----------------------------------------------------------------------------------------------------------------------------------------
function cRP.deliveryConsume(serviceName)
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if deliveryAmount[user_id] == nil then
			deliveryAmount[user_id] = math.random(works[serviceName]["deliveryConsume"]["min"],works[serviceName]["deliveryConsume"]["max"])
		end

		if paymentAmount[user_id] == nil then
			paymentAmount[user_id] = math.random(works[serviceName]["deliveryPayment"]["min"],works[serviceName]["deliveryPayment"]["max"])
		end

		local deliveryItem = works[serviceName]["deliveryPayment"]["item"]
		if (vRP.inventoryWeight(user_id) + (itemWeight(deliveryItem) * parseInt(paymentAmount[user_id]))) <= vRP.getBackpack(user_id) then
			if vRP.tryGetInventoryItem(user_id,works[serviceName]["deliveryItem"],deliveryAmount[user_id]) then
				local paymentPrice = parseInt(paymentAmount[user_id] * deliveryAmount[user_id])

				vRP.generateItem(user_id,deliveryItem,paymentPrice,true)

				if deliveryItem == "dollars" then
					if vRP.userPremium(user_id) then
						vRP.generateItem(user_id,deliveryItem,paymentPrice * 0.1,true)
					end
				end

				deliveryAmount[user_id] = nil
				paymentAmount[user_id] = nil

				if works[serviceName]["upgradeStress"] > 0 then
					vRP.upgradeStress(user_id,works[serviceName]["upgradeStress"])
				end

				if serviceName == "Contrabandista" then
					TriggerClientEvent("player:applyGsr",source)

					if math.random(1000) >= 500 then
						local ped = GetPlayerPed(source)
						local coords = GetEntityCoords(ped)

						local policeResult = vRP.numPermission("Police")
						for k,v in pairs(policeResult) do
							async(function()
								TriggerClientEvent("NotifyPush",v,{ code = "31", title = "Contrabando de Munições", x = coords["x"], y = coords["y"], z = coords["z"], time = "Recebido às "..os.date("%H:%M"), blipColor = 5 })
							end)
						end
					end
				end

				return true
			else
				TriggerClientEvent("Notify",source,"amarelo","Precisa de <b>"..parseFormat(deliveryAmount[user_id]).."x "..itemName(works[serviceName]["deliveryItem"]).."</b> para entregar.",5000)
			end
		else
			TriggerClientEvent("Notify",source,"vermelho","Mochila cheia.",5000)
		end
	end

	return false
end
-----------------------------------------------------------------------------------------------------------------------------------------
-- CHECKPERMISSION
-----------------------------------------------------------------------------------------------------------------------------------------
function cRP.checkPermission(serviceName)
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if works[serviceName]["perm"] == nil then
			return true
		end

		if vRP.hasGroup(user_id,works[serviceName]["perm"]) then
			if activeWorks[serviceName] then
				if parseInt(#activeWorks[serviceName]) < 5 then
					activeWorks[serviceName][user_id] = true
					return true
				else
					TriggerClientEvent("Notify",source,"amarelo","Limite de trabalhadores atingido.",3000)
				end
			else
				return true
			end
		end
	end

	return false
end
-----------------------------------------------------------------------------------------------------------------------------------------
-- FINISHSERVICE
-----------------------------------------------------------------------------------------------------------------------------------------
function cRP.finishService(serviceName)
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id and activeWorks[serviceName] then
		if activeWorks[serviceName][user_id] then
			activeWorks[serviceName][user_id] = nil
		end
	end
end
-----------------------------------------------------------------------------------------------------------------------------------------
-- WORKS:POPSDINER01
-----------------------------------------------------------------------------------------------------------------------------------------
RegisterServerEvent("works:popsDiner01")
AddEventHandler("works:popsDiner01",function()
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if vRP.checkMaxItens(user_id,"paperpackage",1) then
			TriggerClientEvent("Notify",source,"amarelo","Limite atingido.",3000)
			return
		end
		
		local consultOrange = vRP.getInventoryItemAmount(user_id,"orangejuice")
		if consultOrange[1] <= 0 then
			TriggerClientEvent("Notify",source,"amarelo","Precisa de <b>1x "..itemName("orangejuice").."</b>.",5000)
			return
		end
		
		vRP.removeInventoryItem(user_id,"orangejuice",1,false)
		vRP.generateItem(user_id,"paperpackage",1,true)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- WORKS:POPSDINER02
-----------------------------------------------------------------------------------------------------------------------------------------
RegisterServerEvent("works:popsDiner02")
AddEventHandler("works:popsDiner02",function()
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if vRP.checkMaxItens(user_id,"paperpackage",1) then
			TriggerClientEvent("Notify",source,"amarelo","Limite atingido.",3000)
			return
		end
		
		local consultTange = vRP.getInventoryItemAmount(user_id,"tangejuice")
		if consultTange[1] <= 0 then
			TriggerClientEvent("Notify",source,"amarelo","Precisa de <b>1x "..itemName("tangejuice").."</b>.",5000)
			return
		end
		
		vRP.removeInventoryItem(user_id,"tangejuice",1,false)
		vRP.generateItem(user_id,"paperpackage",1,true)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- WORKS:POPSDINER03
-----------------------------------------------------------------------------------------------------------------------------------------
RegisterServerEvent("works:popsDiner03")
AddEventHandler("works:popsDiner03",function()
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if vRP.checkMaxItens(user_id,"paperpackage",1) then
			TriggerClientEvent("Notify",source,"amarelo","Limite atingido.",3000)
			return
		end
		
		local consultGrape = vRP.getInventoryItemAmount(user_id,"grapejuice")
		if consultGrape[1] <= 0 then
			TriggerClientEvent("Notify",source,"amarelo","Precisa de <b>1x "..itemName("grapejuice").."</b>.",5000)
			return
		end
		
		vRP.removeInventoryItem(user_id,"grapejuice",1,false)
		vRP.generateItem(user_id,"paperpackage",1,true)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- WORKS:POPSDINER04
-----------------------------------------------------------------------------------------------------------------------------------------
RegisterServerEvent("works:popsDiner04")
AddEventHandler("works:popsDiner04",function()
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if vRP.checkMaxItens(user_id,"paperpackage",1) then
			TriggerClientEvent("Notify",source,"amarelo","Limite atingido.",3000)
			return
		end
		
		local consultStrawberry = vRP.getInventoryItemAmount(user_id,"strawberryjuice")
		if consultStrawberry[1] <= 0 then
			TriggerClientEvent("Notify",source,"amarelo","Precisa de <b>1x "..itemName("strawberryjuice").."</b>.",5000)
			return
		end
		
		vRP.removeInventoryItem(user_id,"strawberryjuice",1,false)
		vRP.generateItem(user_id,"paperpackage",1,true)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- WORKS:POPSDINER05
-----------------------------------------------------------------------------------------------------------------------------------------
RegisterServerEvent("works:popsDiner05")
AddEventHandler("works:popsDiner05",function()
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if vRP.checkMaxItens(user_id,"paperpackage",1) then
			TriggerClientEvent("Notify",source,"amarelo","Limite atingido.",3000)
			return
		end
		
		local consultBanana = vRP.getInventoryItemAmount(user_id,"bananajuice")
		if consultBanana[1] <= 0 then
			TriggerClientEvent("Notify",source,"amarelo","Precisa de <b>1x "..itemName("bananajuice").."</b>.",5000)
			return
		end
		
		vRP.removeInventoryItem(user_id,"bananajuice",1,false)
		vRP.generateItem(user_id,"paperpackage",1,true)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- WORKS:POPSDINER06
-----------------------------------------------------------------------------------------------------------------------------------------
RegisterServerEvent("works:popsDiner06")
AddEventHandler("works:popsDiner06",function()
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if vRP.checkMaxItens(user_id,"paperpackage",1) then
			TriggerClientEvent("Notify",source,"amarelo","Limite atingido.",3000)
			return
		end
		
		local consultPassion = vRP.getInventoryItemAmount(user_id,"passionjuice")
		if consultPassion[1] <= 0 then
			TriggerClientEvent("Notify",source,"amarelo","Precisa de <b>1x "..itemName("passionjuice").."</b>.",5000)
			return
		end
		
		vRP.removeInventoryItem(user_id,"passionjuice",1,false)
		vRP.generateItem(user_id,"paperpackage",1,true)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- WORKS:MAKEJUICE
-----------------------------------------------------------------------------------------------------------------------------------------
RegisterServerEvent("works:makeJuice")
AddEventHandler("works:makeJuice",function()
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if vRP.checkMaxItens(user_id,"bsjuice",1) then
			TriggerClientEvent("Notify",source,"amarelo","Limite atingido.",3000)
			return
		end

		vRP.generateItem(user_id,"bsjuice",1,true)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- WORKS:MAKEBURGER
-----------------------------------------------------------------------------------------------------------------------------------------
RegisterServerEvent("works:makeBurger")
AddEventHandler("works:makeBurger",function()
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if vRP.checkMaxItens(user_id,"bsburger",1) then
			TriggerClientEvent("Notify",source,"amarelo","Limite atingido.",3000)
			return
		end

		vRP.generateItem(user_id,"bsburger",1,true)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- WORKS:MAKEBOX
-----------------------------------------------------------------------------------------------------------------------------------------
RegisterServerEvent("works:makeBox")
AddEventHandler("works:makeBox",function()
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if vRP.checkMaxItens(user_id,"bsbox",1) then
			TriggerClientEvent("Notify",source,"amarelo","Limite atingido.",3000)
			return
		end

		local consultFood = vRP.getInventoryItemAmount(user_id,"bsburger")
		if consultFood[1] <= 0 then
			TriggerClientEvent("Notify",source,"amarelo","Precisa de <b>1x "..itemName("bsburger").."</b>.",5000)
			return
		end

		local consultJuice = vRP.getInventoryItemAmount(user_id,"bsjuice")
		if consultJuice[1] <= 0 then
			TriggerClientEvent("Notify",source,"amarelo","Precisa de <b>1x "..itemName("bsjuice").."</b>.",5000)
			return
		end

		vRP.removeInventoryItem(user_id,"bsjuice",1,false)
		vRP.removeInventoryItem(user_id,"bsburger",1,false)
		vRP.generateItem(user_id,"bsbox",1,true)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- WORKS:FOODBOX2
-----------------------------------------------------------------------------------------------------------------------------------------
RegisterServerEvent("works:foodBox2")
AddEventHandler("works:foodBox2",function()
	local source = source
	local user_id = vRP.getUserId(source)
	if user_id then
		if vRP.checkMaxItens(user_id,"foodbox2",1) then
			TriggerClientEvent("Notify",source,"amarelo","Limite atingido.",3000)
			return
		end

		local consultFood = vRP.getInventoryItemAmount(user_id,"bsbox")
		if consultFood[1] <= 0 then
			TriggerClientEvent("Notify",source,"amarelo","Precisa de <b>1x "..itemName("bsbox").."</b>.",5000)
			return
		end

		local consultJuice = vRP.getInventoryItemAmount(user_id,"drugtoy")
		if consultJuice[1] <= 0 then
			TriggerClientEvent("Notify",source,"amarelo","Precisa de <b>1x "..itemName("drugtoy").."</b>.",5000)
			return
		end

		vRP.removeInventoryItem(user_id,"bsbox",1,false)
		vRP.removeInventoryItem(user_id,"drugtoy",1,false)
		vRP.generateItem(user_id,"foodbox2",1,true)
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- PLAYERSPAWN
-----------------------------------------------------------------------------------------------------------------------------------------
AddEventHandler("vRP:playerSpawn",function(user_id,source)
	vCLIENT.updateWorks(source,works)
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- PLAYERLEAVE
-----------------------------------------------------------------------------------------------------------------------------------------
AddEventHandler("vRP:playerLeave",function(user_id,source)
	if activeWorks["Ballas"][user_id] then
		activeWorks["Ballas"][user_id] = nil
	end

	if activeWorks["Vagos"][user_id] then
		activeWorks["Vagos"][user_id] = nil
	end

	if activeWorks["DaNang"][user_id] then
		activeWorks["DaNang"][user_id] = nil
	end

	if activeWorks["Families"][user_id] then
		activeWorks["Families"][user_id] = nil
	end

	if activeWorks["Aztecas"][user_id] then
		activeWorks["Aztecas"][user_id] = nil
	end
end)
-----------------------------------------------------------------------------------------------------------------------------------------
-- THREAD:UPDATEWORKS
-----------------------------------------------------------------------------------------------------------------------------------------
Citizen.CreateThread(function()
	Citizen.Wait(1000)
	vCLIENT.updateWorks(-1,works)
end)